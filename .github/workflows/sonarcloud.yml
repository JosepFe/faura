name: SonarCloud Analysis

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  build-and-analyze:
    name: Build and Analyze on SonarCloud
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install global tools (SonarScanner + ReportGenerator)
        run: |
          dotnet tool install --global dotnet-sonarscanner
          dotnet tool install --global dotnet-reportgenerator-globaltool

      - name: Add tool path to environment
        run: echo "$HOME/.dotnet/tools" >> $GITHUB_PATH

      - name: Restore dependencies
        run: dotnet restore src/Faura.sln

      - name: Begin SonarCloud analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          dotnet sonarscanner begin \
            /k:"JosepFe_faura" \
            /o:"josepfe" \
            /d:sonar.login="${SONAR_TOKEN}" \
            /d:sonar.host.url="https://sonarcloud.io" \
            /d:sonar.cs.opencover.reportsPaths="coverage/combined/coverage.opencover.xml"

      - name: Build solution
        run: dotnet build src/Faura.sln --no-restore --configuration Release

      - name: Run Unit Tests with Coverage (WebAPI)
        run: |
          mkdir -p coverage/unit
          dotnet test src/Templates/Faura.WebAPI.UnitTests/Faura.WebAPI.UnitTests.csproj \
            --configuration Release \
            /p:CollectCoverage=true \
            /p:CoverletOutputFormat=opencover \
            /p:CoverletOutput=coverage/unit/ \
            --no-build

      - name: Merge coverage reports
        run: |
          mkdir -p coverage/combined
          reportgenerator \
            -reports:"coverage/unit/coverage.opencover.xml" \
            -targetdir:"coverage/combined" \
            -reporttypes:Html

      - name: Upload Coverage Report Artifact
        uses: actions/upload-artifact@v4
        with:
          name: CoverageReport
          path: coverage/combined

      - name: End SonarCloud Analysis
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: dotnet sonarscanner end /d:sonar.login="${SONAR_TOKEN}"
